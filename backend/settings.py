"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from os import environ, path

from backend.system_utility.settings_utility import DATE_FORMATS, DATETIME_FORMATS
from backend.system_utility.logging_configuration import LOCAL_LOGGING, PRODUCTION_LOGGING

PRODUCTION = environ.get('PRODUCTION').lower() == 'true'
DEBUG = not PRODUCTION

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = environ.get('SECRET_KEY', 'django-insecure-wq+@t+@t*=bl-&)(bd&z4(a0801bnc0bu=3iqt+)qsog!b8wp6')

# SECURITY WARNING: don't run with debug turned on in production!

PRODUCTION_ALLOWED_HOSTS = ['*']

ALLOWED_HOSTS = ['*'] if not PRODUCTION else PRODUCTION_ALLOWED_HOSTS

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_spectacular',
    'drf_standardized_errors',
    'master_data',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_structlog.middlewares.RequestMiddleware',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_SCHEMA_CLASS': 'drf_standardized_errors.openapi.AutoSchema',
    'EXCEPTION_HANDLER': 'drf_standardized_errors.handler.exception_handler'
}

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': environ.get('DB_NAME'),
        'USER': environ.get('DB_USER'),
        'PASSWORD': environ.get('DB_PASSWORD'),
        'HOST': environ.get('DB_HOST'),
    }
}

# Cache
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.dummy.DummyCache",
    }
}

if PRODUCTION:
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "LOCATION": [
                "redis://127.0.0.1:6379",  # leader
            ],
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SPECTACULAR_SETTINGS = {
    'TITLE': 'Sakinah Project API',
    'DESCRIPTION': 'Swagger for Sakinah Project REST API',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'CONTACT': {'name': 'Hafiyyan Sayyid Fadhlillah',
                'url': 'https://www.linkedin.com/in/hafiyyan-sayyid-fadhlillah-47950345/',
                'email': 'hafiyyan94@gmail.com'},
    'LICENSE': {'name': 'MIT License', 'url': 'https://opensource.org/license/mit/'},
    'SERVE_PUBLIC': True,
    "ENUM_NAME_OVERRIDES": {
        "ValidationErrorEnum": "drf_standardized_errors.openapi_serializers.ValidationErrorEnum.choices",
        "ClientErrorEnum": "drf_standardized_errors.openapi_serializers.ClientErrorEnum.choices",
        "ServerErrorEnum": "drf_standardized_errors.openapi_serializers.ServerErrorEnum.choices",
        "ErrorCode401Enum": "drf_standardized_errors.openapi_serializers.ErrorCode401Enum.choices",
        "ErrorCode403Enum": "drf_standardized_errors.openapi_serializers.ErrorCode403Enum.choices",
        "ErrorCode404Enum": "drf_standardized_errors.openapi_serializers.ErrorCode404Enum.choices",
        "ErrorCode405Enum": "drf_standardized_errors.openapi_serializers.ErrorCode405Enum.choices",
        "ErrorCode406Enum": "drf_standardized_errors.openapi_serializers.ErrorCode406Enum.choices",
        "ErrorCode415Enum": "drf_standardized_errors.openapi_serializers.ErrorCode415Enum.choices",
        "ErrorCode429Enum": "drf_standardized_errors.openapi_serializers.ErrorCode429Enum.choices",
        "ErrorCode500Enum": "drf_standardized_errors.openapi_serializers.ErrorCode500Enum.choices",
    },
    "POSTPROCESSING_HOOKS": ["drf_standardized_errors.openapi_hooks.postprocess_schema_enums"]
}

# CORS Related Setting
CORS_ORIGIN_ALLOW_ALL = not PRODUCTION
CORS_ALLOW_CREDENTIALS = True

if PRODUCTION:
    CORS_ORIGIN_WHITELIST = [
        'https://sakinah.co.id',
        'http://localhost:6000'
    ]

    CSRF_TRUSTED_ORIGINS = [
        'https://sakinah.co.id',
        'http://localhost:6000'
    ]

LOGGING = LOCAL_LOGGING if not PRODUCTION else PRODUCTION_LOGGING

SERVEABLE_FOLDER = environ.get('SERVEABLE_FOLDER', '')
SERVEABLE_FOLDER_PATH = BASE_DIR if len(SERVEABLE_FOLDER) == 0 else Path(SERVEABLE_FOLDER)

STATIC_PATH = path.join('static')
STATIC_ROOT = path.join(SERVEABLE_FOLDER_PATH, 'static')
STATIC_URL = '/static/'

MEDIA_PATH = path.join('media')
MEDIA_ROOT = path.join(SERVEABLE_FOLDER_PATH, 'media')
MEDIA_URL = '/media/'
FILE_UPLOAD_TEMP_DIR = path.join(SERVEABLE_FOLDER_PATH, 'temp')

LOGIN_URL = 'rest/login/'
LOGOUT_URL = 'rest/logout/'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

DATE_INPUT_FORMATS = DATE_FORMATS
DATETIME_INPUT_FORMATS = DATETIME_FORMATS

FILE_UPLOAD_MAX_MEMORY_SIZE = 100000000
DATA_UPLOAD_MAX_MEMORY_SIZE = 100000000

FIRST_DAY_OF_WEEK = 1

DRF_STANDARDIZED_ERRORS = {
    "ENABLE_IN_DEBUG_FOR_UNHANDLED_EXCEPTIONS": True,
    "EXCEPTION_HANDLER_CLASS": "backend.system_utility.custom_exception_handler.ExceptionHandlerWithLogging"
}
